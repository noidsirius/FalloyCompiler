# Generated from FAlloy.g4 by ANTLR 4.7.1
from antlr4 import *
from io import StringIO
from typing.io import TextIO
import sys


def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2Z")
        buf.write("\u0212\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64")
        buf.write("\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:")
        buf.write("\4;\t;\4<\t<\4=\t=\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\t")
        buf.write("C\4D\tD\4E\tE\4F\tF\4G\tG\4H\tH\4I\tI\4J\tJ\4K\tK\4L\t")
        buf.write("L\4M\tM\4N\tN\4O\tO\4P\tP\4Q\tQ\4R\tR\4S\tS\4T\tT\4U\t")
        buf.write("U\4V\tV\4W\tW\4X\tX\4Y\tY\3\2\3\2\3\2\3\2\3\2\3\2\3\2")
        buf.write("\3\3\3\3\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\5\3\5\3\6\3")
        buf.write("\6\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3\b\3\b")
        buf.write("\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3")
        buf.write("\13\3\13\3\13\3\f\3\f\3\f\3\f\3\r\3\r\3\16\3\16\3\17\3")
        buf.write("\17\3\20\3\20\3\21\3\21\3\21\3\21\3\21\3\22\3\22\3\22")
        buf.write("\3\22\3\23\3\23\3\23\3\23\3\23\3\23\3\24\3\24\3\24\3\24")
        buf.write("\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\26\3\26\3\27\3\27")
        buf.write("\3\30\3\30\3\30\3\30\3\31\3\31\3\31\3\31\3\32\3\32\3\32")
        buf.write("\3\32\3\33\3\33\3\33\3\33\3\34\3\34\3\35\3\35\3\36\3\36")
        buf.write("\3\36\3\36\3\36\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37")
        buf.write("\3\37\3 \3 \3 \3 \3 \3!\3!\3!\3!\3\"\3\"\3\"\3\"\3\"\3")
        buf.write("#\3#\3#\3#\3#\3#\3#\3#\3$\3$\3$\3%\3%\3&\3&\3&\3&\3\'")
        buf.write("\3\'\3(\3(\3(\3(\3)\3)\3)\3*\3*\3*\3*\3*\3*\3*\3*\3+\3")
        buf.write("+\3+\3+\3+\3,\3,\3-\3-\3-\3-\3-\3.\3.\3.\3.\3.\3/\3/\3")
        buf.write("/\3/\3/\3\60\3\60\3\60\3\60\3\61\3\61\3\61\3\61\3\61\3")
        buf.write("\61\3\61\3\61\3\62\3\62\3\63\3\63\3\63\3\63\3\63\3\64")
        buf.write("\3\64\3\64\3\64\3\64\3\64\3\65\3\65\3\66\3\66\3\66\3\66")
        buf.write("\3\67\3\67\3\67\38\38\38\38\39\39\39\39\39\39\39\39\3")
        buf.write("9\3:\3:\3:\3:\3:\3;\3;\3;\3;\3;\3;\3;\3<\3<\3<\3<\3<\3")
        buf.write("<\3=\3=\3=\3>\3>\3>\3?\3?\3?\3@\3@\3@\3A\3A\3A\3A\3B\3")
        buf.write("B\3C\3C\3C\3C\3D\3D\3D\3D\3E\3E\3E\3F\3F\3F\3G\3G\3G\3")
        buf.write("H\3H\3H\3I\3I\3I\3J\3J\3J\3J\3K\3K\3K\3K\3L\3L\3L\3M\3")
        buf.write("M\3N\3N\3O\3O\3O\3P\3P\3P\3Q\3Q\3R\3R\3S\3S\3T\3T\3U\3")
        buf.write("U\3V\3V\3V\3V\3V\3W\3W\3X\6X\u0208\nX\rX\16X\u0209\3Y")
        buf.write("\3Y\7Y\u020e\nY\fY\16Y\u0211\13Y\2\2Z\3\3\5\4\7\5\t\6")
        buf.write("\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20")
        buf.write("\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65")
        buf.write("\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60")
        buf.write("_\61a\62c\63e\64g\65i\66k\67m8o9q:s;u<w=y>{?}@\177A\u0081")
        buf.write("B\u0083C\u0085D\u0087E\u0089F\u008bG\u008dH\u008fI\u0091")
        buf.write("J\u0093K\u0095L\u0097M\u0099N\u009bO\u009dP\u009fQ\u00a1")
        buf.write("R\u00a3S\u00a5T\u00a7U\u00a9V\u00abW\u00adX\u00afY\u00b1")
        buf.write("Z\3\2\5\3\2\62;\5\2C\\aac|\6\2\62;C\\aac|\2\u0213\2\3")
        buf.write("\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2")
        buf.write("\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2")
        buf.write("\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2")
        buf.write("\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3")
        buf.write("\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2")
        buf.write("/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67")
        buf.write("\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2")
        buf.write("A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2")
        buf.write("\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2")
        buf.write("\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2")
        buf.write("\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3")
        buf.write("\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q")
        buf.write("\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2\2w\3\2\2\2\2y\3\2\2\2\2")
        buf.write("{\3\2\2\2\2}\3\2\2\2\2\177\3\2\2\2\2\u0081\3\2\2\2\2\u0083")
        buf.write("\3\2\2\2\2\u0085\3\2\2\2\2\u0087\3\2\2\2\2\u0089\3\2\2")
        buf.write("\2\2\u008b\3\2\2\2\2\u008d\3\2\2\2\2\u008f\3\2\2\2\2\u0091")
        buf.write("\3\2\2\2\2\u0093\3\2\2\2\2\u0095\3\2\2\2\2\u0097\3\2\2")
        buf.write("\2\2\u0099\3\2\2\2\2\u009b\3\2\2\2\2\u009d\3\2\2\2\2\u009f")
        buf.write("\3\2\2\2\2\u00a1\3\2\2\2\2\u00a3\3\2\2\2\2\u00a5\3\2\2")
        buf.write("\2\2\u00a7\3\2\2\2\2\u00a9\3\2\2\2\2\u00ab\3\2\2\2\2\u00ad")
        buf.write("\3\2\2\2\2\u00af\3\2\2\2\2\u00b1\3\2\2\2\3\u00b3\3\2\2")
        buf.write("\2\5\u00ba\3\2\2\2\7\u00bc\3\2\2\2\t\u00c4\3\2\2\2\13")
        buf.write("\u00c6\3\2\2\2\r\u00c8\3\2\2\2\17\u00d0\3\2\2\2\21\u00d5")
        buf.write("\3\2\2\2\23\u00d8\3\2\2\2\25\u00dd\3\2\2\2\27\u00e4\3")
        buf.write("\2\2\2\31\u00e8\3\2\2\2\33\u00ea\3\2\2\2\35\u00ec\3\2")
        buf.write("\2\2\37\u00ee\3\2\2\2!\u00f0\3\2\2\2#\u00f5\3\2\2\2%\u00f9")
        buf.write("\3\2\2\2\'\u00ff\3\2\2\2)\u0103\3\2\2\2+\u010a\3\2\2\2")
        buf.write("-\u010c\3\2\2\2/\u010e\3\2\2\2\61\u0112\3\2\2\2\63\u0116")
        buf.write("\3\2\2\2\65\u011a\3\2\2\2\67\u011e\3\2\2\29\u0120\3\2")
        buf.write("\2\2;\u0122\3\2\2\2=\u0127\3\2\2\2?\u0130\3\2\2\2A\u0135")
        buf.write("\3\2\2\2C\u0139\3\2\2\2E\u013e\3\2\2\2G\u0146\3\2\2\2")
        buf.write("I\u0149\3\2\2\2K\u014b\3\2\2\2M\u014f\3\2\2\2O\u0151\3")
        buf.write("\2\2\2Q\u0155\3\2\2\2S\u0158\3\2\2\2U\u0160\3\2\2\2W\u0165")
        buf.write("\3\2\2\2Y\u0167\3\2\2\2[\u016c\3\2\2\2]\u0171\3\2\2\2")
        buf.write("_\u0176\3\2\2\2a\u017a\3\2\2\2c\u0182\3\2\2\2e\u0184\3")
        buf.write("\2\2\2g\u0189\3\2\2\2i\u018f\3\2\2\2k\u0191\3\2\2\2m\u0195")
        buf.write("\3\2\2\2o\u0198\3\2\2\2q\u019c\3\2\2\2s\u01a5\3\2\2\2")
        buf.write("u\u01aa\3\2\2\2w\u01b1\3\2\2\2y\u01b7\3\2\2\2{\u01ba\3")
        buf.write("\2\2\2}\u01bd\3\2\2\2\177\u01c0\3\2\2\2\u0081\u01c3\3")
        buf.write("\2\2\2\u0083\u01c7\3\2\2\2\u0085\u01c9\3\2\2\2\u0087\u01cd")
        buf.write("\3\2\2\2\u0089\u01d1\3\2\2\2\u008b\u01d4\3\2\2\2\u008d")
        buf.write("\u01d7\3\2\2\2\u008f\u01da\3\2\2\2\u0091\u01dd\3\2\2\2")
        buf.write("\u0093\u01e0\3\2\2\2\u0095\u01e4\3\2\2\2\u0097\u01e8\3")
        buf.write("\2\2\2\u0099\u01eb\3\2\2\2\u009b\u01ed\3\2\2\2\u009d\u01ef")
        buf.write("\3\2\2\2\u009f\u01f2\3\2\2\2\u00a1\u01f5\3\2\2\2\u00a3")
        buf.write("\u01f7\3\2\2\2\u00a5\u01f9\3\2\2\2\u00a7\u01fb\3\2\2\2")
        buf.write("\u00a9\u01fd\3\2\2\2\u00ab\u01ff\3\2\2\2\u00ad\u0204\3")
        buf.write("\2\2\2\u00af\u0207\3\2\2\2\u00b1\u020b\3\2\2\2\u00b3\u00b4")
        buf.write("\7o\2\2\u00b4\u00b5\7q\2\2\u00b5\u00b6\7f\2\2\u00b6\u00b7")
        buf.write("\7w\2\2\u00b7\u00b8\7n\2\2\u00b8\u00b9\7g\2\2\u00b9\4")
        buf.write("\3\2\2\2\u00ba\u00bb\7]\2\2\u00bb\6\3\2\2\2\u00bc\u00bd")
        buf.write("\7g\2\2\u00bd\u00be\7z\2\2\u00be\u00bf\7c\2\2\u00bf\u00c0")
        buf.write("\7e\2\2\u00c0\u00c1\7v\2\2\u00c1\u00c2\7n\2\2\u00c2\u00c3")
        buf.write("\7{\2\2\u00c3\b\3\2\2\2\u00c4\u00c5\7.\2\2\u00c5\n\3\2")
        buf.write("\2\2\u00c6\u00c7\7_\2\2\u00c7\f\3\2\2\2\u00c8\u00c9\7")
        buf.write("r\2\2\u00c9\u00ca\7t\2\2\u00ca\u00cb\7k\2\2\u00cb\u00cc")
        buf.write("\7x\2\2\u00cc\u00cd\7c\2\2\u00cd\u00ce\7v\2\2\u00ce\u00cf")
        buf.write("\7g\2\2\u00cf\16\3\2\2\2\u00d0\u00d1\7q\2\2\u00d1\u00d2")
        buf.write("\7r\2\2\u00d2\u00d3\7g\2\2\u00d3\u00d4\7p\2\2\u00d4\20")
        buf.write("\3\2\2\2\u00d5\u00d6\7c\2\2\u00d6\u00d7\7u\2\2\u00d7\22")
        buf.write("\3\2\2\2\u00d8\u00d9\7h\2\2\u00d9\u00da\7c\2\2\u00da\u00db")
        buf.write("\7e\2\2\u00db\u00dc\7v\2\2\u00dc\24\3\2\2\2\u00dd\u00de")
        buf.write("\7c\2\2\u00de\u00df\7u\2\2\u00df\u00e0\7u\2\2\u00e0\u00e1")
        buf.write("\7g\2\2\u00e1\u00e2\7t\2\2\u00e2\u00e3\7v\2\2\u00e3\26")
        buf.write("\3\2\2\2\u00e4\u00e5\7h\2\2\u00e5\u00e6\7w\2\2\u00e6\u00e7")
        buf.write("\7p\2\2\u00e7\30\3\2\2\2\u00e8\u00e9\7\60\2\2\u00e9\32")
        buf.write("\3\2\2\2\u00ea\u00eb\7*\2\2\u00eb\34\3\2\2\2\u00ec\u00ed")
        buf.write("\7+\2\2\u00ed\36\3\2\2\2\u00ee\u00ef\7<\2\2\u00ef \3\2")
        buf.write("\2\2\u00f0\u00f1\7r\2\2\u00f1\u00f2\7t\2\2\u00f2\u00f3")
        buf.write("\7g\2\2\u00f3\u00f4\7f\2\2\u00f4\"\3\2\2\2\u00f5\u00f6")
        buf.write("\7t\2\2\u00f6\u00f7\7w\2\2\u00f7\u00f8\7p\2\2\u00f8$\3")
        buf.write("\2\2\2\u00f9\u00fa\7e\2\2\u00fa\u00fb\7j\2\2\u00fb\u00fc")
        buf.write("\7g\2\2\u00fc\u00fd\7e\2\2\u00fd\u00fe\7m\2\2\u00fe&\3")
        buf.write("\2\2\2\u00ff\u0100\7h\2\2\u0100\u0101\7q\2\2\u0101\u0102")
        buf.write("\7t\2\2\u0102(\3\2\2\2\u0103\u0104\7g\2\2\u0104\u0105")
        buf.write("\7z\2\2\u0105\u0106\7r\2\2\u0106\u0107\7g\2\2\u0107\u0108")
        buf.write("\7e\2\2\u0108\u0109\7v\2\2\u0109*\3\2\2\2\u010a\u010b")
        buf.write("\7\62\2\2\u010b,\3\2\2\2\u010c\u010d\7\63\2\2\u010d.\3")
        buf.write("\2\2\2\u010e\u010f\7d\2\2\u010f\u0110\7w\2\2\u0110\u0111")
        buf.write("\7v\2\2\u0111\60\3\2\2\2\u0112\u0113\7k\2\2\u0113\u0114")
        buf.write("\7p\2\2\u0114\u0115\7v\2\2\u0115\62\3\2\2\2\u0116\u0117")
        buf.write("\7u\2\2\u0117\u0118\7g\2\2\u0118\u0119\7s\2\2\u0119\64")
        buf.write("\3\2\2\2\u011a\u011b\7u\2\2\u011b\u011c\7k\2\2\u011c\u011d")
        buf.write("\7i\2\2\u011d\66\3\2\2\2\u011e\u011f\7}\2\2\u011f8\3\2")
        buf.write("\2\2\u0120\u0121\7\177\2\2\u0121:\3\2\2\2\u0122\u0123")
        buf.write("\7g\2\2\u0123\u0124\7p\2\2\u0124\u0125\7w\2\2\u0125\u0126")
        buf.write("\7o\2\2\u0126<\3\2\2\2\u0127\u0128\7c\2\2\u0128\u0129")
        buf.write("\7d\2\2\u0129\u012a\7u\2\2\u012a\u012b\7v\2\2\u012b\u012c")
        buf.write("\7t\2\2\u012c\u012d\7c\2\2\u012d\u012e\7e\2\2\u012e\u012f")
        buf.write("\7v\2\2\u012f>\3\2\2\2\u0130\u0131\7n\2\2\u0131\u0132")
        buf.write("\7q\2\2\u0132\u0133\7p\2\2\u0133\u0134\7g\2\2\u0134@\3")
        buf.write("\2\2\2\u0135\u0136\7q\2\2\u0136\u0137\7p\2\2\u0137\u0138")
        buf.write("\7g\2\2\u0138B\3\2\2\2\u0139\u013a\7u\2\2\u013a\u013b")
        buf.write("\7q\2\2\u013b\u013c\7o\2\2\u013c\u013d\7g\2\2\u013dD\3")
        buf.write("\2\2\2\u013e\u013f\7g\2\2\u013f\u0140\7z\2\2\u0140\u0141")
        buf.write("\7v\2\2\u0141\u0142\7g\2\2\u0142\u0143\7p\2\2\u0143\u0144")
        buf.write("\7f\2\2\u0144\u0145\7u\2\2\u0145F\3\2\2\2\u0146\u0147")
        buf.write("\7k\2\2\u0147\u0148\7p\2\2\u0148H\3\2\2\2\u0149\u014a")
        buf.write("\7-\2\2\u014aJ\3\2\2\2\u014b\u014c\7n\2\2\u014c\u014d")
        buf.write("\7g\2\2\u014d\u014e\7v\2\2\u014eL\3\2\2\2\u014f\u0150")
        buf.write("\7#\2\2\u0150N\3\2\2\2\u0151\u0152\7p\2\2\u0152\u0153")
        buf.write("\7q\2\2\u0153\u0154\7v\2\2\u0154P\3\2\2\2\u0155\u0156")
        buf.write("\7?\2\2\u0156\u0157\7@\2\2\u0157R\3\2\2\2\u0158\u0159")
        buf.write("\7k\2\2\u0159\u015a\7o\2\2\u015a\u015b\7r\2\2\u015b\u015c")
        buf.write("\7n\2\2\u015c\u015d\7k\2\2\u015d\u015e\7g\2\2\u015e\u015f")
        buf.write("\7u\2\2\u015fT\3\2\2\2\u0160\u0161\7g\2\2\u0161\u0162")
        buf.write("\7n\2\2\u0162\u0163\7u\2\2\u0163\u0164\7g\2\2\u0164V\3")
        buf.write("\2\2\2\u0165\u0166\7/\2\2\u0166X\3\2\2\2\u0167\u0168\7")
        buf.write("p\2\2\u0168\u0169\7q\2\2\u0169\u016a\7p\2\2\u016a\u016b")
        buf.write("\7g\2\2\u016bZ\3\2\2\2\u016c\u016d\7k\2\2\u016d\u016e")
        buf.write("\7f\2\2\u016e\u016f\7g\2\2\u016f\u0170\7p\2\2\u0170\\")
        buf.write("\3\2\2\2\u0171\u0172\7w\2\2\u0172\u0173\7p\2\2\u0173\u0174")
        buf.write("\7k\2\2\u0174\u0175\7x\2\2\u0175^\3\2\2\2\u0176\u0177")
        buf.write("\7K\2\2\u0177\u0178\7p\2\2\u0178\u0179\7v\2\2\u0179`\3")
        buf.write("\2\2\2\u017a\u017b\7u\2\2\u017b\u017c\7g\2\2\u017c\u017d")
        buf.write("\7s\2\2\u017d\u017e\7\61\2\2\u017e\u017f\7K\2\2\u017f")
        buf.write("\u0180\7p\2\2\u0180\u0181\7v\2\2\u0181b\3\2\2\2\u0182")
        buf.write("\u0183\7B\2\2\u0183d\3\2\2\2\u0184\u0185\7f\2\2\u0185")
        buf.write("\u0186\7k\2\2\u0186\u0187\7u\2\2\u0187\u0188\7l\2\2\u0188")
        buf.write("f\3\2\2\2\u0189\u018a\7h\2\2\u018a\u018b\7w\2\2\u018b")
        buf.write("\u018c\7|\2\2\u018c\u018d\7|\2\2\u018d\u018e\7{\2\2\u018e")
        buf.write("h\3\2\2\2\u018f\u0190\7?\2\2\u0190j\3\2\2\2\u0191\u0192")
        buf.write("\7c\2\2\u0192\u0193\7n\2\2\u0193\u0194\7n\2\2\u0194l\3")
        buf.write("\2\2\2\u0195\u0196\7p\2\2\u0196\u0197\7q\2\2\u0197n\3")
        buf.write("\2\2\2\u0198\u0199\7u\2\2\u0199\u019a\7w\2\2\u019a\u019b")
        buf.write("\7o\2\2\u019bp\3\2\2\2\u019c\u019d\7u\2\2\u019d\u019e")
        buf.write("\7n\2\2\u019e\u019f\7k\2\2\u019f\u01a0\7i\2\2\u01a0\u01a1")
        buf.write("\7j\2\2\u01a1\u01a2\7v\2\2\u01a2\u01a3\7n\2\2\u01a3\u01a4")
        buf.write("\7{\2\2\u01a4r\3\2\2\2\u01a5\u01a6\7j\2\2\u01a6\u01a7")
        buf.write("\7c\2\2\u01a7\u01a8\7n\2\2\u01a8\u01a9\7h\2\2\u01a9t\3")
        buf.write("\2\2\2\u01aa\u01ab\7o\2\2\u01ab\u01ac\7q\2\2\u01ac\u01ad")
        buf.write("\7u\2\2\u01ad\u01ae\7v\2\2\u01ae\u01af\7n\2\2\u01af\u01b0")
        buf.write("\7{\2\2\u01b0v\3\2\2\2\u01b1\u01b2\7h\2\2\u01b2\u01b3")
        buf.write("\7w\2\2\u01b3\u01b4\7n\2\2\u01b4\u01b5\7n\2\2\u01b5\u01b6")
        buf.write("\7{\2\2\u01b6x\3\2\2\2\u01b7\u01b8\7k\2\2\u01b8\u01b9")
        buf.write("\7u\2\2\u01b9z\3\2\2\2\u01ba\u01bb\7~\2\2\u01bb\u01bc")
        buf.write("\7~\2\2\u01bc|\3\2\2\2\u01bd\u01be\7q\2\2\u01be\u01bf")
        buf.write("\7t\2\2\u01bf~\3\2\2\2\u01c0\u01c1\7(\2\2\u01c1\u01c2")
        buf.write("\7(\2\2\u01c2\u0080\3\2\2\2\u01c3\u01c4\7c\2\2\u01c4\u01c5")
        buf.write("\7p\2\2\u01c5\u01c6\7f\2\2\u01c6\u0082\3\2\2\2\u01c7\u01c8")
        buf.write("\7(\2\2\u01c8\u0084\3\2\2\2\u01c9\u01ca\7>\2\2\u01ca\u01cb")
        buf.write("\7?\2\2\u01cb\u01cc\7@\2\2\u01cc\u0086\3\2\2\2\u01cd\u01ce")
        buf.write("\7k\2\2\u01ce\u01cf\7h\2\2\u01cf\u01d0\7h\2\2\u01d0\u0088")
        buf.write("\3\2\2\2\u01d1\u01d2\7-\2\2\u01d2\u01d3\7-\2\2\u01d3\u008a")
        buf.write("\3\2\2\2\u01d4\u01d5\7>\2\2\u01d5\u01d6\7<\2\2\u01d6\u008c")
        buf.write("\3\2\2\2\u01d7\u01d8\7<\2\2\u01d8\u01d9\7@\2\2\u01d9\u008e")
        buf.write("\3\2\2\2\u01da\u01db\7>\2\2\u01db\u01dc\7>\2\2\u01dc\u0090")
        buf.write("\3\2\2\2\u01dd\u01de\7@\2\2\u01de\u01df\7@\2\2\u01df\u0092")
        buf.write("\3\2\2\2\u01e0\u01e1\7@\2\2\u01e1\u01e2\7@\2\2\u01e2\u01e3")
        buf.write("\7@\2\2\u01e3\u0094\3\2\2\2\u01e4\u01e5\7u\2\2\u01e5\u01e6")
        buf.write("\7g\2\2\u01e6\u01e7\7v\2\2\u01e7\u0096\3\2\2\2\u01e8\u01e9")
        buf.write("\7/\2\2\u01e9\u01ea\7@\2\2\u01ea\u0098\3\2\2\2\u01eb\u01ec")
        buf.write("\7>\2\2\u01ec\u009a\3\2\2\2\u01ed\u01ee\7@\2\2\u01ee\u009c")
        buf.write("\3\2\2\2\u01ef\u01f0\7?\2\2\u01f0\u01f1\7>\2\2\u01f1\u009e")
        buf.write("\3\2\2\2\u01f2\u01f3\7@\2\2\u01f3\u01f4\7?\2\2\u01f4\u00a0")
        buf.write("\3\2\2\2\u01f5\u01f6\7%\2\2\u01f6\u00a2\3\2\2\2\u01f7")
        buf.write("\u01f8\7\u0080\2\2\u01f8\u00a4\3\2\2\2\u01f9\u01fa\7,")
        buf.write("\2\2\u01fa\u00a6\3\2\2\2\u01fb\u01fc\7`\2\2\u01fc\u00a8")
        buf.write("\3\2\2\2\u01fd\u01fe\7~\2\2\u01fe\u00aa\3\2\2\2\u01ff")
        buf.write("\u0200\7v\2\2\u0200\u0201\7j\2\2\u0201\u0202\7k\2\2\u0202")
        buf.write("\u0203\7u\2\2\u0203\u00ac\3\2\2\2\u0204\u0205\7\61\2\2")
        buf.write("\u0205\u00ae\3\2\2\2\u0206\u0208\t\2\2\2\u0207\u0206\3")
        buf.write("\2\2\2\u0208\u0209\3\2\2\2\u0209\u0207\3\2\2\2\u0209\u020a")
        buf.write("\3\2\2\2\u020a\u00b0\3\2\2\2\u020b\u020f\t\3\2\2\u020c")
        buf.write("\u020e\t\4\2\2\u020d\u020c\3\2\2\2\u020e\u0211\3\2\2\2")
        buf.write("\u020f\u020d\3\2\2\2\u020f\u0210\3\2\2\2\u0210\u00b2\3")
        buf.write("\2\2\2\u0211\u020f\3\2\2\2\5\2\u0209\u020f\2")
        return buf.getvalue()


class FAlloyLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    T__36 = 37
    T__37 = 38
    T__38 = 39
    T__39 = 40
    T__40 = 41
    T__41 = 42
    T__42 = 43
    T__43 = 44
    T__44 = 45
    T__45 = 46
    T__46 = 47
    T__47 = 48
    T__48 = 49
    T__49 = 50
    T__50 = 51
    T__51 = 52
    T__52 = 53
    T__53 = 54
    T__54 = 55
    T__55 = 56
    T__56 = 57
    T__57 = 58
    T__58 = 59
    T__59 = 60
    T__60 = 61
    T__61 = 62
    T__62 = 63
    T__63 = 64
    T__64 = 65
    T__65 = 66
    T__66 = 67
    T__67 = 68
    T__68 = 69
    T__69 = 70
    T__70 = 71
    T__71 = 72
    T__72 = 73
    T__73 = 74
    T__74 = 75
    T__75 = 76
    T__76 = 77
    T__77 = 78
    T__78 = 79
    T__79 = 80
    T__80 = 81
    T__81 = 82
    T__82 = 83
    T__83 = 84
    T__84 = 85
    T__85 = 86
    NUMBER = 87
    ID = 88

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'module'", "'['", "'exactly'", "','", "']'", "'private'", "'open'", 
            "'as'", "'fact'", "'assert'", "'fun'", "'.'", "'('", "')'", 
            "':'", "'pred'", "'run'", "'check'", "'for'", "'expect'", "'0'", 
            "'1'", "'but'", "'int'", "'seq'", "'sig'", "'{'", "'}'", "'enum'", 
            "'abstract'", "'lone'", "'one'", "'some'", "'extends'", "'in'", 
            "'+'", "'let'", "'!'", "'not'", "'=>'", "'implies'", "'else'", 
            "'-'", "'none'", "'iden'", "'univ'", "'Int'", "'seq/Int'", "'@'", 
            "'disj'", "'fuzzy'", "'='", "'all'", "'no'", "'sum'", "'slightly'", 
            "'half'", "'mostly'", "'fully'", "'is'", "'||'", "'or'", "'&&'", 
            "'and'", "'&'", "'<=>'", "'iff'", "'++'", "'<:'", "':>'", "'<<'", 
            "'>>'", "'>>>'", "'set'", "'->'", "'<'", "'>'", "'=<'", "'>='", 
            "'#'", "'~'", "'*'", "'^'", "'|'", "'this'", "'/'" ]

    symbolicNames = [ "<INVALID>",
            "NUMBER", "ID" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "T__36", "T__37", 
                  "T__38", "T__39", "T__40", "T__41", "T__42", "T__43", 
                  "T__44", "T__45", "T__46", "T__47", "T__48", "T__49", 
                  "T__50", "T__51", "T__52", "T__53", "T__54", "T__55", 
                  "T__56", "T__57", "T__58", "T__59", "T__60", "T__61", 
                  "T__62", "T__63", "T__64", "T__65", "T__66", "T__67", 
                  "T__68", "T__69", "T__70", "T__71", "T__72", "T__73", 
                  "T__74", "T__75", "T__76", "T__77", "T__78", "T__79", 
                  "T__80", "T__81", "T__82", "T__83", "T__84", "T__85", 
                  "NUMBER", "ID" ]

    grammarFileName = "FAlloy.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.7.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


